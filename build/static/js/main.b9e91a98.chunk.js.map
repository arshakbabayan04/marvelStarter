{"version":3,"sources":["components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/error-Boundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","_jsxs","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","children","_jsx","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_ref2","_callee2","_args2","_context2","_transformComics","getCharacter","_ref3","_callee3","id","_context3","getComic","_ref4","_callee4","_context4","_x2","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","slice","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","ref","el","tabIndex","onCharSelected","onKeyDown","e","key","renderItems","disabled","Skeleton","_Fragment","Link","to","resourceURI","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsLoaded","newComicsList","renderComics","AppBanner","avengers","avengersLogo","ComicsPage","Page404","navigate","useNavigate","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","AppHeader","NavLink","end","isActive","App","Router","Routes","Route","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b9e91a98.chunk.js","sourcesContent":["const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit:\n        'contain', margin: \"0 auto\"}} src={img} alt='Error'/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=0651a529892b6188aa77bfec5396ac75';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return {loading, error, getAllCharacters, clearError, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message)\n            throw e;\n        }\n    });\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error, clearError}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        // const timerId = setInterval(updateChar, 60000);\n\n        // return () => {\n        //     clearInterval(timerId);\n        // }\n    }, []);\n\n    const onCharLoaded = (char) => {\n        if (char.description === '') {\n            char.description = 'There is no description for this character';\n        }\n        if (char.description.length > 150) {\n            char.description = char.description.slice(0, 150) + '...';\n        }\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(error || loading) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n    \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit': 'cover',};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'contain',}\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n        .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    ref={el => itemRefs.current[i] = el}\n                    tabIndex={0}\n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                        }}\n                    onKeyDown={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                     }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    } \n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n    \n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Link } from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId]);\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n         \n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)   \n    }\n\n    const onCharLoaded = (char) => {\n        if (char.description === '') {\n            char.description = 'There is no description for this character';\n        }\n        if (char.description.length > 150) {\n            char.description = char.description.slice(0, 150) + '...';\n        }\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(error || loading || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n    \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    //console.log(comics[0].resourceURI.slice(43));\n    let imgStyle = {'objectFit': 'cover',};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'contain',}\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"abyss\" style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                <Link to={`/comics/${item.resourceURI.slice(43)}`}>\n                                    {item.name}\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../error-Boundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n    \n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n        .then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderComics(arr)  {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderComics(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => {onRequest(offset)}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport {Link, useNavigate} from 'react-router-dom';\n\nconst Page404 = () => {\n    const navigate = useNavigate();\n    return (\n        <div>\n            <ErrorMessage/>\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\n            <Link \n                style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px',\n                    'marginTop': '30px', 'color': '#9F0013'}}\n                to={navigate(-1)}>Back to main page\n            </Link>\n        </div>\n        \n\n    )\n}\n\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\nimport {useState, useEffect} from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateComic();\n    }, [comicId]);\n\n    const updateComic = () => {\n\n        clearError();\n        getComic(comicId)\n            .then(onComicLoaded)   \n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(error || loading || !comic) ? <View comic={comic}/> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title, description, pageCount, thumbnail, language, price} = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;","import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                        end \n                        style={( {isActive} ) => ({'color': isActive ? '#9F0013' : 'inherit'})}\n                        to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink  \n                        style={( {isActive} ) => ({'color': isActive ? '#9F0013' : 'inherit'})}\n                        to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\n\nimport { MainPage, ComicsPage, Page404, SingleComicPage } from \"../pages\";\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\n                        <Route path=\"*\" element={<Page404/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM\n.createRoot(document.getElementById('root'))\n.render(\n  <App />\n);\n\n"],"sourceRoot":""}