{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_ref2","_callee2","_args2","_context2","_transformComics","getCharacter","_ref3","_callee3","id","_context3","getCharacterByName","_ref4","_callee4","name","_context4","_x2","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsLoaded","newComicsList","ended","_toConsumableArray","console","log","arr","item","i","CSSTransition","timeout","classNames","Link","to","TransitionGroup","component","renderComics","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/8.82392429.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit:\n        'contain', margin: \"0 auto\"}} src={img} alt='Error'/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=0651a529892b6188aa77bfec5396ac75';\n    const _baseOffset = 211;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return { \n            clearError, \n            process,\n            setProcess, \n            getAllCharacters, \n            getCharacter, \n            getAllComics, \n            getComic, \n            getCharacterByName}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n\n        setProcess('loading');\n\n        try {\n\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {request, clearError, process, setProcess}\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');                 \n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n        .then(onComicsLoaded)\n        .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    console.log(comicsList);\n\n    function renderComics(arr)  {\n        const items = arr.map((item, i) => {\n            return (\n                <CSSTransition \n                    key={i}\n                    timeout={600}\n                    classNames=\"comics__item\">\n                    <li className=\"comics__item\">\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderComics(comicsList), newItemLoading)}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => {onRequest(offset)}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\n\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                    />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;"],"sourceRoot":""}