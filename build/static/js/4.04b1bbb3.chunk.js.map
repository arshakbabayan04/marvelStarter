{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_ref2","_callee2","_args2","_context2","_transformComics","getCharacter","_ref3","_callee3","id","_context3","getComic","_ref4","_callee4","_context4","_x2","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","className","children","_jsxs","Link","to","renderComics","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/4.04b1bbb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit:\n        'contain', margin: \"0 auto\"}} src={img} alt='Error'/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=0651a529892b6188aa77bfec5396ac75';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter)\n    }\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics)\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return {loading, error, getAllCharacters, clearError, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message)\n            throw e;\n        }\n    });\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error, clearError}\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n        .then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderComics(arr)  {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderComics(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => {onRequest(offset)}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;"],"sourceRoot":""}